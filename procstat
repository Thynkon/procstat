#!/usr/bin/env python3

import psutil
import argparse
import sys


def get_pid(name):
    for proc in psutil.process_iter(["pid", "name"]):
        if proc.info["name"] == name:
            return proc.pid
    else:
        return None


def main():
    parser = argparse.ArgumentParser(description="Gets all open ports of a process")
    parser.add_argument("-n", "--name", help="Process name")
    parser.add_argument("-p", "--pid", help="Process id")
    args = parser.parse_args()

    if args.name:
        pid = get_pid(args.name)
        proc = psutil.Process(pid)
    elif args.pid:
        args.pid = int(args.pid)

        if psutil.pid_exists(args.pid):
            proc = psutil.Process(args.pid)
        else:
            print(f"The PID {args.pid} does not exist!")
            print("Exiting...")

            sys.exit(1)
    else:
        print("Neither the name nor the PID of a process where passed to this script!")
        print("Exiting...")
        sys.exit(1)


    open_connections = [x for x in proc.connections() if x.status == psutil.CONN_LISTEN]

    if len(open_connections) == 0:
        print(f"No connections found for {proc.name()}")
    else:
        print("Here it is a list of all open ports:")
        for connection in open_connections:
            # Only print the local port of the connection
            print(connection[3].port)


if __name__ == "__main__":
    main()
    sys.exit(0)
